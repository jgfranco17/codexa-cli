name: Testing

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  unit-tests:
    name: Run unit test suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Run unit tests with coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report > coverage.txt
          poetry run coverage html

      - name: Create GHA job summary
        if: always()
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          echo "# TestClerk Unit Testing Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Pytest coverage" >> $GITHUB_STEP_SUMMARY
          echo '```text' >> $GITHUB_STEP_SUMMARY
          cat coverage.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage files
        if: success()
        id: upload-pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: coverage_html/

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post report URL
        if: success()
        run: |
          echo "Coverage report: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
